<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.winniethepooh.hotelsystembackend.mapper.OrderMapper">
    <insert id="insertRoomComment">
        update room_order
        set comment      = #{comment},
            comment_star = #{commentStar},
            updated_at   = now()
        where id = #{id}
    </insert>

    <insert id="insertMealComment">
        update meal_order
        set comment      = #{comment},
            comment_star = #{commentStar},
            updated_at   = now()
        where id = #{id}
    </insert>

    <insert id="insertRoomOrderV1">
        insert into room_order
        set individual_id = #{individualId},
            room_id       = #{roomId},
            checkin_time  = #{checkinTime},
            checkout_time = #{checkoutTime},
            pay_status    = 1,
            status        = 0,
            created_at    = now(),
            updated_at    = now()
    </insert>
    <insert id="insertRoomOrderV2" useGeneratedKeys="true" keyProperty="id">
        insert into room_order
        set individual_id = #{individualId},
            user_id       = #{userId},
            room_id       = #{roomId},
            checkin_time  = #{checkinTime},
            checkout_time = #{checkoutTime},
            pay_status    = 0,
            status        = 0,
            created_at    = now(),
            updated_at    = now()
    </insert>
    <insert id="insertMealOrder" useGeneratedKeys="true" keyProperty="id">
        insert into meal_order
        set user_id      = #{userId},
            address      = #{address},
            remarks      = #{remarks},
            total_amount = #{totalAmount},
            order_status = 0,
            created_at   = now(),
            updated_at   = now()
    </insert>
    <insert id="insertMealOrderItem">
        insert into meal_order_item
        set meal_order_id = #{mealOrderId},
            dish_id       = #{dishId},
            quantity      = #{quantity},
            unit_price    = #{unitPrice},
            created_at    = now(),
            updated_at    = now()
    </insert>
    <update id="modifyRoomOrder">
        update room_order
        <set>
            <if test="modifyRoomOrderDTO.roomId != null">room_id = #{modifyRoomOrderDTO.roomId},</if>
            <if test="modifyRoomOrderDTO.checkInTime != null">checkin_time = #{modifyRoomOrderDTO.checkInTime},</if>
            <if test="modifyRoomOrderDTO.checkOutTime != null">checkout_time = #{modifyRoomOrderDTO.checkOutTime},</if>
            updated_at = now()
        </set>
        where id = #{id}
    </update>

    <update id="deleteRoomOrder">
        update room_order
        set is_deleted = 1,
            updated_at = now()
        where id = #{id}
    </update>

    <update id="modifyRoomOrderStatus">
        update room_order
        set status     = #{status},
            updated_at = now()
        where id = #{id}
          and is_deleted = 0
    </update>

    <update id="modifyRoomOrderPayStatus">
        update room_order
        set pay_status = #{status},
            updated_at = now()
        where id = #{id}
          and is_deleted = 0
    </update>

    <update id="flushExpiredRoomOrders">
        update room_order
        set status     = 2,
            updated_at = now()
        where is_deleted = 0
          and status = 0
          and pay_status = 0
          and created_at &lt; DATE_SUB(NOW(), INTERVAL 15 MINUTE)
    </update>
    <update id="modifyMealOrderStatus">
        update meal_order
        set order_status = #{status},
            updated_at   = now()
        where id = #{id}
          and is_deleted = 0
    </update>

    <select id="getMealOrdersByDate" resultType="com.winniethepooh.hotelsystembackend.entity.MealOrder">
        select *
        from meal_order
        <where>
            is_deleted = 0
            and (DATE(created_at) between #{startDate} and #{endDate})
            <if test="id != null">
                and user_id = #{id}
            </if>
        </where>
    </select>

    <select id="getRoomOrdersByDate" resultType="com.winniethepooh.hotelsystembackend.entity.RoomOrder">
        select *
        from room_order
        <where>
            is_deleted = 0
            and (DATE(created_at) between #{startDate} and #{endDate})
            <if test="id != null">
                and user_id = #{id}
            </if>
        </where>
    </select>

    <select id="getAllRoomOrderList" resultType="com.winniethepooh.hotelsystembackend.entity.RoomOrder">
        select *
        from room_order
        where is_deleted = 0
        limit #{offset}, #{limit}
    </select>

    <select id="getTodayStats" resultType="java.math.BigDecimal">
        select sum(total_amount) as today
        from room_order
        where DATE(checkin_time) = DATE(#{date})
          and pay_status = 1
          and is_deleted = 0
    </select>

    <select id="getThisMonthStats" resultType="java.math.BigDecimal">
        select sum(total_amount) as thisMonth
        from room_order
        where DATE_FORMAT(checkin_time, '%Y-%m') = DATE_FORMAT(#{date}, '%Y-%m')
          and pay_status = 1
          and is_deleted = 0
    </select>

    <select id="getTodayAvgRoomPrice" resultType="java.math.BigDecimal">
        select avg(total_amount) as todayAvg
        from room_order
        where DATE(checkin_time) = DATE(#{date})
          and pay_status = 1
          and is_deleted = 0
    </select>

    <select id="getThisTypeRoomRevenueDuringTheTime" resultType="java.math.BigDecimal">
        select sum(total_amount) as thisTypeRoomRevenueDuringTheTime
        from room_order
        where (DATE(checkin_time) between DATE(#{startDate}) and DATE(#{endDate}))
          and pay_status = 1
          and room_id = #{roomType}
          and is_deleted = 0
    </select>

    <select id="getEachFloorOccupancy" resultType="java.lang.Double">
        SELECT CAST(COUNT(DISTINCT r.id) AS DECIMAL) /
               (SELECT COUNT(*)
                FROM room
                WHERE floor = #{floor}
                  AND created_at &lt;= DATE(#{date})) * 100 AS eachFloorOccupancy
        FROM room_order ro
                 JOIN room r ON ro.room_id = r.id
        WHERE DATE(#{date}) BETWEEN DATE(ro.checkin_time) AND DATE(ro.checkout_time)
          AND ro.pay_status = 1
          AND ro.is_deleted = 0
          AND r.floor = #{floor}
    </select>

    <select id="getTop10Dishes" resultType="com.winniethepooh.hotelsystembackend.vo.DishTop10VO">
        SELECT d.name            AS name, -- 获取菜品名称
               SUM(moi.quantity) AS value -- 计算每个菜品的总销量
        FROM meal_order_item moi
                 JOIN
             meal_order mo ON moi.meal_order_id = mo.id -- 连接餐饮订单表，获取订单信息
                 JOIN
             dish d ON moi.dish_id = d.id -- 连接菜品表，获取菜品名称
        WHERE mo.created_at BETWEEN #{startDate} AND #{endDate} -- 限制订单时间范围
          AND mo.is_deleted = 0                                 -- 订单未删除
          AND d.is_deleted = 0                                  -- 菜品未删除
        GROUP BY d.name -- 按照菜品名称分组
        ORDER BY value DESC -- 按销量降序排序
        LIMIT 10; -- 获取前 10 个销量最高的菜品
    </select>

    <select id="getTodayOccupiedRoomCount" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT room_id) AS occupiedRoomCount
        FROM room_order
        WHERE DATE(#{date}) between DATE(checkin_time) and DATE(checkout_time)
          AND pay_status = 1
          AND is_deleted = 0
    </select>

    <select id="getRoomsOccupiedOnAFloor" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT ro.room_id) AS occupiedRoomCount
        FROM room_order ro
                 left join room r on ro.room_id = r.id
        WHERE DATE(#{date}) between DATE(ro.checkin_time) and DATE(ro.checkout_time)
          AND ro.pay_status = 1
          AND ro.is_deleted = 0
          AND r.floor = #{floor}
          AND r.is_deleted = 0
    </select>

    <select id="findRoomOrdersToRelease" resultType="com.winniethepooh.hotelsystembackend.entity.RoomOrder">
        select *
        from room_order
        where is_deleted = 0
          and status = 0
          and pay_status = 1
          and checkout_time &lt; #{now}
    </select>

    <select id="getIndividualByRoomIdAndDate"
            resultType="com.winniethepooh.hotelsystembackend.entity.Individual">
        select distinct i.*
        from individual i
                 join room_order ro on i.id = ro.individual_id
        where ro.room_id = #{roomId}
          and DATE(ro.checkin_time) &lt;= DATE(#{date})
          and DATE(ro.checkout_time) &gt;= DATE(#{date})
          and ro.is_deleted = 0
    </select>

    <select id="getAllRoomOrderCount" resultType="java.lang.Integer">
        select count(*)
        from room_order
        where is_deleted = 0
    </select>

    <select id="getCheckTimeByRoomIdAndTime"
            resultType="com.winniethepooh.hotelsystembackend.dto.TimeCheckDTO">
        select checkin_time  as checkInTime,
               checkout_time as checkOutTime
        from room_order
        where room_id = #{roomId}
          and is_deleted = 0
          and checkin_time &lt;= #{now}
          and checkout_time &gt;= #{now}
          and pay_status = 1
          and status = 0
    </select>

    <select id="findRoomOrdersToEnable" resultType="com.winniethepooh.hotelsystembackend.entity.RoomOrder">
        select *
        from room_order
        where is_deleted = 0
          and status = 0
          and pay_status = 1
          and #{now} &gt;= checkin_time
    </select>

    <select id="getRoomOrderByRoomIdAndTime"
            resultType="com.winniethepooh.hotelsystembackend.entity.RoomOrder">
        select *
        from room_order
        where room_id = #{id}
          and is_deleted = 0
          and checkin_time &lt;= #{now}
          and checkout_time &gt;= #{now}
          and pay_status = 1
          and status = 0
    </select>
    <select id="getRoomOrderById" resultType="com.winniethepooh.hotelsystembackend.entity.RoomOrder">
        select *
        from room_order
        where id = #{id}
          and is_deleted = 0
    </select>
    <select id="getLiveMealOrderStatusCount"
            resultType="com.winniethepooh.hotelsystembackend.dto.MealOrderStatusCountDTO">
        SELECT SUM(IF(order_status = 0 AND created_at >= NOW() - INTERVAL 1 DAY, 1, 0)) AS newOrderCount,
               SUM(IF(order_status = 1 AND created_at >= NOW() - INTERVAL 1 DAY, 1, 0)) AS pendingOrderCount,
               SUM(IF(order_status = 2 AND created_at >= NOW() - INTERVAL 1 DAY, 1, 0)) AS doneOrderCount
        FROM meal_order;
    </select>
    <select id="getLiveMealOrderList" resultType="com.winniethepooh.hotelsystembackend.entity.MealOrder">
        SELECT *
        FROM meal_order
        WHERE is_deleted = 0
          AND created_at >= NOW() - INTERVAL 1 DAY
        ORDER BY created_at DESC
    </select>

    <select id="getMealOrderItemsByOrderId"
            resultType="com.winniethepooh.hotelsystembackend.entity.MealOrderItem">
        select moi.id          as id,
               moi.dish_id     as dishId,
               moi.quantity    as quantity,
               moi.unit_price  as unitPrice,
               moi.total_price as totalPrice,
               d.name          as name
        from meal_order_item moi
                 join dish d on moi.dish_id = d.id
        where meal_order_id = #{mealOrderId}
          and moi.is_deleted = 0
    </select>

    <select id="getMealOrderByOrderId" resultType="com.winniethepooh.hotelsystembackend.entity.MealOrder">
        select *
        from meal_order
        where id = #{mealOrderId}
          and is_deleted = 0
    </select>


</mapper>